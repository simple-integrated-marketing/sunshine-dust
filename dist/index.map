{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/objectSpread.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","index.js"],"names":["WeatherWonka","el","apiUrl","config","beforeInnerContent","innerHTML","defaults","blockName","days","iconMap","Map","iconMapDefaults","dayNames","templateContainer","templateDay","Object","assign","isStarted","init","length","getRequest","weatherData","forecasts","console","error","weatherDataDays","weather","dayData","getDayData","dayHtml","map","day","dayName","Date","dateTime","getDay","icon","get","precisCode","weatherHtml","blockModifier","content","join","data","wrapTag","precis","min","max","url","fetch","then","response","request","json","catch","dayLimit","index","firstResult","entries","filter","Boolean","window"],"mappingsjtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AChBA;IACqBA;;;AACjB,wBAAYC,EAAZ,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgC;AAAA;AAC5B,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKC,MAAL,GAAcA,MAAd,CAF4B,CAI5B;;AACA,SAAKE,kBAAL,GAA0BH,EAAE,CAACI,SAA7B;AACA,SAAKJ,EAAL,CAAQI,SAAR,GAAoB,EAApB,CAN4B,CAQ5B;;AACA,QAAMC,QAAQ,GAAG;AACbC,MAAAA,SAAS,EAAE,SADE;AAEbC,MAAAA,IAAI,EAAE,CAFO;AAGbC,MAAAA,OAAO,EAAE,IAAIC,GAAJ,CAAQC,eAAR,CAHI;AAIbC,MAAAA,QAAQ,EAARA,QAJa;AAKbC,MAAAA,iBAAiB,EAAjBA,iBALa;AAMbC,MAAAA,WAAW,EAAXA;AANa,KAAjB,CAT4B,CAiB5B;;AACA,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","file":"index.map","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","// Weather Wonka\nexport default class WeatherWonka {\n    constructor(el, apiUrl, config) {\n        this.el = el;\n        this.apiUrl = apiUrl;\n\n        // Backup and remove the element html\n        this.beforeInnerContent = el.innerHTML;\n        this.el.innerHTML = '';\n\n        // Set the default variables\n        const defaults = {\n            blockName: 'weather',\n            days: 1,\n            iconMap: new Map(iconMapDefaults),\n            dayNames,\n            templateContainer,\n            templateDay,\n        };\n        // Combine configs\n        this.config = Object.assign({}, defaults, config);\n\n        // Fix days if misconfigured\n        if (this.config.days > 7 || this.config.days < 1) this.config.days = 7;\n\n        this.isStarted = false;\n        this.init();\n    }\n\n    async init() {\n        if (this.isStarted || !!this.el.length) return;\n\n        // Get the weather data\n        const weatherData = await getRequest(this.apiUrl);\n        if (!weatherData || !weatherData.forecasts)\n            return console.error('Error connecting to the apiUrl');\n\n        // Get the source day data from the weather forecast\n        const { days: weatherDataDays } = weatherData.forecasts.weather;\n\n        // Get the number of days to display\n        const { days } = this.config;\n\n        // Get the data for the number of days specified\n        const dayData = getDayData(weatherDataDays, days);\n\n        // Generate the markup for each of the days\n        const dayHtml = dayData.map(day => {\n            return this.config.templateDay(\n                {\n                    ...this.config,\n                    ...day,\n                    dayName: this.config.dayNames[\n                        new Date(day.dateTime).getDay()\n                    ],\n                    icon: this.config.iconMap.get(day.precisCode),\n                },\n                dayData.length > 1 ? 'li' : 'div'\n            );\n        });\n\n        // Generate the container markup and include the day markup\n        const weatherHtml = this.config.templateContainer(\n            {\n                ...this.config,\n                blockModifier: `${this.config.blockName}--${days}day${\n                    days > 1 ? 's' : ''\n                }`,\n                content: dayHtml.join('\\n'),\n            },\n            days > 1 ? 'ul' : 'div'\n        );\n\n        // Add the markup within our element\n        this.el.innerHTML = weatherHtml;\n\n        this.isStarted = true;\n    }\n\n    // Restore the original view\n    destroy() {\n        if (!this.isStarted) return;\n        this.el.innerHTML = this.beforeInnerContent;\n        this.isStarted = false;\n    }\n}\n\n// Define icon mappings\n// ['precisCode', 'iconName']\nconst iconMapDefaults = [\n    ['fine', 'weather-icon--day-sunny'],\n    ['mostly-fine', 'weather-icon--day-cloudy'],\n    ['high-cloud', 'weather-icon--day-cloudy-high'],\n    ['partly-cloudy', 'weather-icon--day-cloudy'],\n    ['mostly-cloudy', 'weather-icon--day-cloudy'],\n    ['cloudy', 'weather-icon--cloudy'],\n    ['overcast', 'weather-icon--cloudy'],\n    ['shower-or-two', 'weather-icon--showers'],\n    ['chance-shower-fine', 'weather-icon--day-showers'],\n    ['chance-shower-cloud', 'weather-icon--showers'],\n    ['drizzle', 'weather-icon--sprinkle'],\n    ['few-showers', 'weather-icon--showers'],\n    ['showers-rain', 'weather-icon--rain'],\n    ['heavy-showers-rain', 'weather-icon--rain'],\n    ['chance-thunderstorm-fine', 'weather-icon--day-storm-showers'],\n    ['chance-thunderstorm-cloud', 'weather-icon--storm-showers'],\n    ['chance-thunderstorm-showers', 'weather-icon--storm-showers'],\n    ['thunderstorm', 'weather-icon--thunderstorm'],\n    ['chance-snow-fine', 'weather-icon--day-snow-wind'],\n    ['chance-snow-cloud', 'weather-icon--snow'],\n    ['snow-and-rain', 'weather-icon--rain-mix'],\n    ['light-snow', 'weather-icon--snow'],\n    ['snow', 'weather-icon--snow'],\n    ['heavy-snow', 'weather-icon--snow'],\n    ['wind', 'weather-icon--strong-wind'],\n    ['frost', 'weather-icon--snowflake-cold'],\n    ['fog', 'weather-icon--fog'],\n    ['hail', 'weather-icon--hail'],\n    ['dust', 'weather-icon--dust'],\n];\n\n// Define daynames\nconst dayNames = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n];\n\n// The template for the day(s) container\nconst templateContainer = (data, wrapTag) => `\n    <${wrapTag} class=\"${data.blockName} ${data.blockModifier}\">${\n    data.content\n}</${wrapTag}>\n`;\n\n// The template for each day\nconst templateDay = (data, wrapTag) => `\n<${wrapTag} class=\"${data.blockName}__item\">\n    <div class=\"${data.blockName}__title\">\n        ${data.dayName}\n    </div>\n    <div class=\"${data.blockName}__details\">\n        <div class=\"${data.blockName}__icon\" data-label=\"${data.precis}\">\n            <svg class=\"${\n                data.blockName\n            }__svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\">\n                <use xlink:href=\"#${data.icon}\" />\n            </svg>\n        </div>\n        <div class=\"${data.blockName}__min-max\">\n            <div class=\"${data.blockName}__temp ${data.blockName}__temp--min\">\n                <abbr class=\"${\n                    data.blockName\n                }__label\" title=\"Minimum\">Min</abbr>\n                <span class=\"${data.blockName}__value\">${data.min}</span>\n            </div>\n            <div class=\"${data.blockName}__temp ${data.blockName}__temp--max\">\n                <abbr class=\"${\n                    data.blockName\n                }__label\" title=\"Maximum\">Max</abbr>\n                <span class=\"${data.blockName}__value\">${data.max}</span>\n            </div>\n        </div>\n    </div>\n</${wrapTag}>\n`;\n\n// Fetch a response and convert to JSON\nconst getRequest = async url => {\n    let request;\n    await fetch(url)\n        .then(response => {\n            request = response.json();\n        })\n        .catch(error => {\n            return console.error('Error:', error, url);\n        });\n    return request;\n};\n\n// Get the simplified day data from the Willy Weather json\nconst getDayData = (days, dayLimit) =>\n    days\n        .map((day, index) => {\n            const firstResult = day.entries && day.entries[0];\n            return index + 1 <= dayLimit ? { ...firstResult } : null;\n        })\n        .filter(Boolean);\n\n// Make it available on the window object\n// if that floats your boat\nwindow.WeatherWonka = WeatherWonka;\n"]}